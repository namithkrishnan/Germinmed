@model Germinmed.Models.Users
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_MainSiteLayout.cshtml";
    
}


@using (Html.BeginForm("Register", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <section class="main login">

        <section class=" brands sec-1 ">
            <div class="container ">
                <div class="row">

                    <aside class="col-lg-4 right ">
                        <div class="modal-header">
                            <div class="panel">
                                <h2>Register</h2>
                                <p>creat a new account</p>
                                <label class="label-success">@ViewBag.SuccessMessage</label>
                                <label class="label-danger">@ViewBag.DuplicateMessage</label>
                            </div>
                        </div>
                        <div class="modal-body">
                            <form id="Login">
                                @Html.ValidationSummary(true)
                                <div class="form-group">
                                    @Html.EditorFor(model => model.ClinicName, new { htmlAttributes = new { @class = "form-control", type = "text", id = "inputClinic", placeholder = "Medical Center / Clinic Name *", required = "" } })
                                    @Html.ValidationMessageFor(model => model.ClinicName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group ">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", type = "name", id = "inputname", placeholder = "First Name *" } }) @*new { @class = "form-control", type = "name", id = "inputname", placeholder = "First Name" })*@
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email", id = "inputEmail", placeholder = "Email Address *" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", type = "text", id = "inputPhone", placeholder = "Phone Number *", required = "" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", type = "text", id = "inputUserName", placeholder = "User Name *", required = "" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", id = "inputPassword", placeholder = "Password *" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password", id = "inputPassword", placeholder = "Confirm Password *" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>

                                <button type="submit" class="btn btn-primary">Register</button>
                                <div class="creat-btn brd"> <a href="@Url.Action("Index","Login")">Login</a> </div>

                                <div class="form-group">
                                    <div class="has-error">
                                        <label class="label-success">@ViewBag.SuccessMessage</label>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="has-error">
                                        <label class="label-danger">@ViewBag.DuplicateMessage</label>
                                    </div>
                                </div>


                            </form>
                        </div>
                    </aside>
                </div>
            </div>
        </section>
    </section>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
